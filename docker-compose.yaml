version: '3'

services:
   mongodb:
    container_name: mongo_service
    image: mongo
    ports:
      - 27017:27017
    environment:         
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - mongodb-data:/data/db

   rabbitmq:
    image: rabbitmq
    container_name: rabbitmq_service
    ports:
     - 5672:5672

   reservations:
    container_name: reservations_app
    build: 
      context: .
      dockerfile: ./apps/reservations/Dockerfile
      target: developemnt
    depends_on:
      - mongodb
      - rabbitmq
    env_file:
      - ./apps/reservations/.env
    command: ["yarn", "start:dev", "reservations"]
    ports:
      - '3000:3000'
    volumes:
      - .:/app


   auth:
    container_name: auth_app
    build: 
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: developemnt
    depends_on:
      - mongodb
      - rabbitmq
    env_file:
      - ./apps/auth/.env
    command: ["yarn", "start:dev", "auth"]
    ports:
      - '3001:3001'
    volumes:
      - .:/app
  
   payments:
    container_name: payments_app
    build: 
      context: .
      dockerfile: ./apps/payments/Dockerfile
      target: developemnt
    depends_on:
      - mongodb
      - rabbitmq
    env_file:
      - ./apps/payments/.env
    command: ["yarn", "start:dev", "payments"]
    ports:
      - '3002:3002'
    volumes:
      - .:/app

   notifications:
    container_name: notifications_app
    build: 
      context: .
      dockerfile: ./apps/notifications/Dockerfile
      target: developemnt
    depends_on:
      - mongodb
      - rabbitmq
    env_file:
      - ./apps/notifications/.env
    command: ["yarn", "start:dev", "notifications"]
    ports:
      - '3003:3003'
    volumes:
      - .:/app


volumes:
 mongodb-data:
  driver: local